name: CI Pipeline - Decameron Hotels System

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - "frontend/**"
      - "docs/**"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "backend/**"
      - "frontend/**"
      - "docs/**"
      - ".github/workflows/ci.yml"

env:
  PHP_VERSION: "8.2"
  NODE_VERSION: "18"

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: hotel_db_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: backend/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('backend/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: pdo_pgsql, pgsql
      - name: Install Composer dependencies
        working-directory: backend
        run: composer install --no-progress --no-interaction
      - name: Run Backend Tests
        working-directory: backend
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: hotel_db_test
          DB_USERNAME: test_user
          DB_PASSWORD: test_password
        run: ./vendor/bin/phpunit --configuration phpunit.xml

  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Cache Node dependencies
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install Node dependencies
        working-directory: frontend
        run: npm install
      - name: Run Frontend Lint
        working-directory: frontend
        run: npm run lint
      - name: Run Frontend Tests
        working-directory: frontend
        run: npm test -- --watchAll=false

  docs-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Check Docs Folder
        run: |
          if [ ! -d "docs" ]; then
            echo "Carpeta docs no encontrada"
            exit 1
          fi
